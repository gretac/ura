install.packages('Rcpp')
install.packages('knitr')
installed.packages('testthat')
install.packages('testthat')
install.packages('testthat', dependencies =  TRUE)
install.packages('devtools', dependencies =  TRUE)
install.packages('devtools', dependencies =  TRUE)
install.packages('devtools', dependencies =  TRUE)
install.packages('xml2', dependencies =  TRUE)
version
install.packages("Rcpp")
install.packages("testthat")
install.packages("Rcpp")
install.packages("testthat")
install.packages("knitr")
Sys.setenv("PKG_CXXFLAGS"="-std=c++0x")
library(automatonR)
install.packages("roxygen2")
Sys.setenv("PKG_CXXFLAGS"="-std=c++0x")
Sys.setenv("PKG_CXXFLAGS"="-std=c++0x")
Sys.setenv("PKG_CXXFLAGS"="-std=c++0x -DDEBUG")
qnxData <- read.csv(file="/home/y2joshi/ownCloud/kevToCsv/hil-clean-subset-preproc.csv", header=TRUE, sep=",")
traceTimes = qnxData$time
traceEvents = qnxData$traceEvent
alphabetLength = 6
library(automatonR)
r = processTrace(traceTimes, traceEvents, alphabetLength, "(^0)*.((<0.(^1)*.1>[0,20000]).(^0)*)+")
createTimedAutomaton("(^0)*.((<0.(^1)*.1>[0,20000]).(^0)*)+")
createTimedAutomaton("(^(0))*.((<0.(^(1))*.1>[0,20000]).(^(0))*)+")
createTimedAutomaton("(^0)*")
alphabetLength
r = processTrace(traceTimes, traceEvents, alphabetLength-1, "(^0)*.((<0.(^1)*.1>[0,20000]).(^0)*)+")
r$success
install.packages(c("Rcpp","RInside"),type="source")
install.packages(c("Rcpp", "RInside"), type = "source")
library(automatonR)
Sys.setenv("PKG_CXXFLAGS"="-std=c++0x")
library(automatonR)
library(automatonR)
list.files("~/kevToCsv/","hil-clean-02[0-9].csv")
list.files("~/kevToCsv/","hil-clean-02*.csv")
list.files("~/kevToCsv/","hil-clean-021*.csv")
list.files("~/kevToCsv/","hil-clean-02[0-9].txt")
library(automatonR)
qnxData <- read.csv(file="/home/y2joshi/kevToCsv/hil-clean-020.txt", header=TRUE, sep=",")
traceTimes = qnxData$time
traceEvents = qnxData$traceEvent
traceEvents
traceTimes
traceEvents
traceEvents
alphabetLength = 45
r = processTrace(traceTimes, traceEvents, alphabetLength, "(^(0)*).((<0.^(1)*.1>[0,40000]).(^(0)*))+")
r$success
savehistory("~/ura/spec-mining/history3.Rhistory")
